diff -urpN busybox-1.15.1.orig/testsuite/mdev.tests busybox-1.15.1/testsuite/mdev.tests
--- busybox-1.15.1.orig/testsuite/mdev.tests	2009-09-12 17:55:37.000000000 +0200
+++ busybox-1.15.1/testsuite/mdev.tests	2013-10-03 13:18:37.982243118 +0200
@@ -11,7 +11,7 @@ FILTER_LS="sed -e 's/,  */,/g' -e 's/  *
 # cut: remove size+date
 FILTER_LS2="sed -e 's/,  */,/g' -e 's/  */ /g' | cut -d' ' -f 1-4,9-"
 
-# testing "test name" "options" "expected result" "file input" "stdin"
+# testing "test name" "commands" "expected result" "file input" "stdin"
 
 rm -rf mdev.testdir
 mkdir mdev.testdir
@@ -106,6 +106,26 @@ br--r--r-- 1 0 0 sda
 
 # continuing to use directory structure from prev test
 rm -rf mdev.testdir/dev/*
+echo "sda 0:0 444 =disk/sd/a" >mdev.testdir/etc/mdev.conf
+optional STATIC FEATURE_MDEV_CONF FEATURE_MDEV_RENAME FEATURE_LS_RECURSIVE FEATURE_LS_TIMESTAMPS FEATURE_LS_USERNAME
+testing "mdev move rule '=bar/baz/fname'" \
+	"env - PATH=$PATH ACTION=add DEVPATH=/block/sda chroot mdev.testdir /mdev 2>&1;
+	ls -lnR mdev.testdir/dev | $FILTER_LS2" \
+"\
+mdev.testdir/dev:
+drwxr-xr-x 3 0 0 disk
+
+mdev.testdir/dev/disk:
+drwxr-xr-x 2 0 0 sd
+
+mdev.testdir/dev/disk/sd:
+br--r--r-- 1 0 0 a
+" \
+	"" ""
+SKIP=
+
+# continuing to use directory structure from prev test
+rm -rf mdev.testdir/dev/*
 # here we complicate things by having non-matching group 1 and using %0
 echo "s([0-9])*d([a-z]+) 0:0 644 >sd/%2_%0" >mdev.testdir/etc/mdev.conf
 testing "mdev regexp substring match + replace" \
diff -urpN busybox-1.15.1.orig/util-linux/mdev.c busybox-1.15.1/util-linux/mdev.c
--- busybox-1.15.1.orig/util-linux/mdev.c	2009-09-12 17:55:37.000000000 +0200
+++ busybox-1.15.1/util-linux/mdev.c	2013-10-03 13:18:37.983243117 +0200
@@ -76,6 +76,18 @@ struct globals {
 /* We use additional 64+ bytes in make_device() */
 #define SCRATCH_SIZE 80
 
+static void mkdir_recursive(char *name)
+{
+	/* if name has many levels ("dir1/dir2"),
+	 * bb_make_directory() will create dir1 according to umask,
+	 * not according to its "mode" parameter.
+	 * Since we run with umask=0, need to temporarily switch it.
+	 */
+	umask(022); /* "dir1" (if any) will be 0755 too */
+	bb_make_directory(name, 0755, FILEUTILS_RECUR);
+	umask(0);
+}
+
 /* Builds an alias path.
  * This function potentionally reallocates the alias parameter.
  * Only used for ENABLE_FEATURE_MDEV_RENAME
@@ -89,7 +101,7 @@ static char *build_alias(char *alias, co
 	dest = strrchr(alias, '/');
 	if (dest) { /* ">bar/[baz]" ? */
 		*dest = '\0'; /* mkdir bar */
-		bb_make_directory(alias, 0755, FILEUTILS_RECUR);
+		mkdir_recursive(alias);
 		*dest = '/';
 		if (dest[1] == '\0') { /* ">bar/" => ">bar/device_name" */
 			dest = alias;
